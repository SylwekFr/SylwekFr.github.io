{"version":3,"file":"static/js/890.a58b7050.chunk.js","mappings":"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","sources":["books/repositories/boook-api-repository.tsx","books/view/books.tsx","shared/components/review-card.tsx"],"sourcesContent":["import Book from \"../entities/book\";\nimport axios, { AxiosResponse, AxiosError } from 'axios';\n\nexport class BookApiRepository{\n    baseUrl = \"https://openlibrary.org/api/books\"\n\n\n    getBook(isbn: string): Promise<Book> {\n        const queryParameter = new URLSearchParams({\n            bibkeys: `ISBN:${isbn}`,\n            format: \"json\",\n            jscmd: \"data\"\n        })\n        return new Promise<Book>((resolve, reject) => {\n            axios.get(`${this.baseUrl}?${queryParameter.toString()}`)\n            .then(async (response: AxiosResponse) => {\n                if(response.data){\n                    const bookData = response.data[`ISBN:${isbn}`]\n                    const authorName: string = bookData.authors[0].name\n                    const authorOlid: string = bookData.authors[0].url.match(/OL[^/]+/)\n                    const description: string = await this.getDescription(isbn)\n                    const book: Book = {\n                        author: authorName,\n                        avatar: `https://covers.openlibrary.org/a/olid/${authorOlid}-S.jpg`,\n                        date: bookData.publish_date,\n                        sumup: description,\n                        detail: bookData.subtitle,\n                        picture: bookData.cover.medium,\n                        title: bookData.title\n                    }\n                    resolve(book)\n                }\n                reject(new Error(\"Not data retrieved for this book\"));\n            })\n            .catch((error: AxiosError) => {\n                reject(error);\n            });\n        })\n\n    }\n    async getDescription(isbn: string): Promise<string> {\n        const queryParameter = new URLSearchParams({\n            bibkeys: `ISBN:${isbn}`,\n            format: \"json\",\n            jscmd: \"details\"\n        })\n        const response = await axios.get(`${this.baseUrl}?${queryParameter.toString()}`);\n        console.log(response.data[`ISBN:${isbn}`].details)\n        const details = response.data[`ISBN:${isbn}`].details;\n        let description: string;\n        if (typeof details.description == \"string\") {\n            description = details.description\n        } else if (details.description?.value) {\n            description = details.description.value\n        } else {\n            description =  response.data[`ISBN:${isbn}`].info_url\n        }\n        return description\n\n    }\n\n}","import Grid from '@mui/material/Grid';\nimport React, { useEffect, useState } from 'react';\nimport ReviewCard from '../../shared/components/review-card';\nimport Book from '../entities/book';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { BookApiRepository } from '../repositories/boook-api-repository';\n\nexport default function Books(): JSX.Element {\n  const { t } = useTranslation('books');\n  const [books, setBooks] = useState<Book[]>([]);\n\n  useEffect(() => {\n    const isbnArray = t<string, string[]>('books', { returnObjects: true });\n    const BookGetter = new BookApiRepository;\n    Promise.all(isbnArray.map((isbn) => BookGetter.getBook(isbn)))\n      .then((bookDataArray) => {\n        setBooks(bookDataArray);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, [t]);\n\n\n  return (\n    <>\n      <Helmet>\n        <title>SylwekFr - Books</title>\n        <meta\n          name=\"description\"\n          content=\"Welcome to the book's part. This part contains books I recommend reading. If you read those books, I hope you will enjoy them as much as I did. Wishing you some lovely reading time.\"\n        />\n      </Helmet>\n      <Grid\n        container\n        justifyContent=\"space-around\"\n        alignContent=\"center\"\n        spacing={3}\n      >\n        {books.map((book) => (\n              <Grid key={book.title} item justifyItems=\"center\" sm={12} md={6} lg={3}>\n                <ReviewCard {...book} pictureHeight={500} />\n              </Grid>\n              )\n            )\n        }\n      </Grid>\n    </>\n  );\n}\n","import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Avatar from '@mui/material/Avatar';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport { styled } from '@mui/material/styles';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\nimport React, { FC } from 'react';\n\ntype ExpandMoreProps = {\n  expand: boolean;\n} & IconButtonProps;\n\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\nexport type ReviewCardProps = {\n  avatar?: string;\n  author: string;\n  date: number;\n  detail?: string;\n  picture: string;\n  pictureHeight: number;\n  sumup: string;\n  title: string;\n};\n\nconst ReviewCard: FC<ReviewCardProps> = (props: ReviewCardProps) => {\n  const [expanded, setExpanded] = React.useState(false);\n\n  const onExpand = () => {\n    setExpanded(!expanded);\n  };\n\n  const { author, avatar, date, detail, picture, pictureHeight, sumup, title } =\n    props;\n  return (\n    <>\n      <Card sx={{ maxWidth: 345, m: 'auto' }}>\n        <CardHeader\n          avatar={\n            <Tooltip title={author}>\n              <Avatar aria-label=\"author\" alt={author} src={avatar} />\n            </Tooltip>\n          }\n          title={title}\n          subheader={date}\n        />\n        <CardMedia\n          component=\"img\"\n          loading=\"lazy\"\n          height={pictureHeight}\n          image={picture}\n          alt={title}\n        />\n        { detail && (\n        <CardContent>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {detail}\n          </Typography>\n        </CardContent>\n        )}\n        <CardActions disableSpacing>\n          <ExpandMore\n            expand={expanded}\n            onClick={onExpand}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </ExpandMore>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography paragraph>{sumup}</Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n    </>\n  );\n};\n\nexport default ReviewCard;\n"],"names":["BookApiRepository","_classCallCheck","baseUrl","_createClass","key","value","isbn","_this","queryParameter","URLSearchParams","bibkeys","concat","format","jscmd","Promise","resolve","reject","axios","toString","then","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","bookData","authorName","authorOlid","description","book","wrap","_context","prev","next","data","authors","name","url","match","getDescription","sent","author","avatar","date","publish_date","sumup","detail","subtitle","picture","cover","medium","title","Error","stop","_x","apply","arguments","catch","error","_getDescription","_callee2","_details$description","details","_context2","this","console","log","info_url","abrupt","_x2","Books","t","useTranslation","_useState","useState","_useState2","_slicedToArray","books","setBooks","useEffect","isbnArray","returnObjects","BookGetter","all","map","getBook","bookDataArray","_jsxs","_Fragment","children","Helmet","_jsx","content","Grid","container","justifyContent","alignContent","spacing","item","justifyItems","sm","md","lg","ReviewCard","_objectSpread","pictureHeight","ExpandMore","styled","props","expand","other","_objectWithoutProperties","_excluded","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","_React$useState","React","_React$useState2","expanded","setExpanded","Card","sx","maxWidth","m","CardHeader","Tooltip","Avatar","alt","src","subheader","CardMedia","component","loading","height","image","CardContent","Typography","variant","color","CardActions","disableSpacing","onClick","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","paragraph"],"sourceRoot":""}