{"version":3,"file":"static/js/72.2b65d6f5.chunk.js","mappings":"iNAGO,MAAMA,EAAiBC,WAAAA,GAAA,KAC1BC,QAAU,mCAAmC,CAG7CC,OAAAA,CAAQC,GACJ,MAAMC,EAAiB,IAAIC,gBAAgB,CACvCC,QAAS,QAAQH,IACjBI,OAAQ,OACRC,MAAO,SAEX,OAAO,IAAIC,SAAc,CAACC,EAASC,KAC/BC,EAAAA,EAAMC,IAAI,GAAGC,KAAKb,WAAWG,EAAeW,cAC3CC,MAAKC,UACF,GAAGC,EAASC,KAAK,CACb,MAAMC,EAAWF,EAASC,KAAK,QAAQhB,KACjCkB,EAAqBD,EAASE,QAAQ,GAAGC,KACzCC,EAAqBJ,EAASE,QAAQ,GAAGG,IAAIC,MAAM,WACnDC,QAA4Bb,KAAKc,eAAezB,GAChD0B,EAAa,CACfC,OAAQT,EACRU,OAAQ,yCAAyCP,UACjDQ,KAAMZ,EAASa,aACfC,MAAOP,EACPQ,OAAQf,EAASgB,SACjBC,QAASjB,EAASkB,MAAMC,OACxBC,MAAOpB,EAASoB,OAEpB9B,EAAQmB,EACZ,CACAlB,EAAO,IAAI8B,MAAM,oCAAoC,IAExDC,OAAOC,IACJhC,EAAOgC,EAAM,GACf,GAGV,CACA,oBAAMf,CAAezB,GAAgC,IAADyC,EAChD,MAAMxC,EAAiB,IAAIC,gBAAgB,CACvCC,QAAS,QAAQH,IACjBI,OAAQ,OACRC,MAAO,YAELU,QAAiBN,EAAAA,EAAMC,IAAI,GAAGC,KAAKb,WAAWG,EAAeW,cACnE8B,QAAQC,IAAI5B,EAASC,KAAK,QAAQhB,KAAQ4C,SAC1C,MAAMA,EAAU7B,EAASC,KAAK,QAAQhB,KAAQ4C,QAC9C,IAAIpB,EAQJ,OANIA,EAD8B,iBAAvBoB,EAAQpB,YACDoB,EAAQpB,YACI,QAAvBiB,EAAIG,EAAQpB,mBAAW,IAAAiB,GAAnBA,EAAqBI,MACdD,EAAQpB,YAAYqB,MAEnB9B,EAASC,KAAK,QAAQhB,KAAQ8C,SAE1CtB,CAEX,E,aCnDW,SAASuB,IACtB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,IAAe,UACtBC,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,IAe3C,OAbAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAYN,EAAoB,QAAS,CAAEO,eAAe,IAC1DC,EAAa,IAAI5D,EACvBU,QAAQmD,IAAIH,EAAUI,KAAK1D,GAASwD,EAAWzD,QAAQC,MACpDa,MAAM8C,IACLR,EAASQ,EAAc,IAExBpB,OAAOC,IACNE,QAAQF,MAAMA,EAAM,GACpB,GACH,CAACQ,KAIFY,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACG,EAAAA,EAAM,CAAAD,SAAA,EACLE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,sBACPE,EAAAA,EAAAA,KAAA,QACE5C,KAAK,cACL6C,QAAQ,8LAGZD,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CACHC,WAAS,EACTC,eAAe,eACfC,aAAa,SACbC,QAAS,EAAER,SAEVZ,EAAMQ,KAAKhC,IACNsC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAAkBK,MAAI,EAACC,aAAa,SAASC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEb,UACrEE,EAAAA,EAAAA,KAACY,EAAAA,EAAU,IAAKlD,EAAMmD,cAAe,OAD5BnD,EAAKW,aAS9B,C,+KChCA,MAAMyC,GAAaC,EAAAA,EAAAA,KAAQC,IACzB,MAAM,OAAEC,KAAWC,GAAUF,EAC7B,OAAOhB,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,IAAKD,GAAS,GAFfH,EAGhBK,IAAA,IAAC,MAAEC,EAAK,OAAEJ,GAAQG,EAAA,MAAM,CACzBE,UAAYL,EAA0B,iBAAjB,eACrBM,WAAY,OACZC,WAAYH,EAAMI,YAAYC,OAAO,YAAa,CAChDC,SAAUN,EAAMI,YAAYE,SAASC,WAExC,IAkED,EArDyCZ,IACvC,MAAOa,EAAUC,GAAeC,EAAAA,UAAe,IAMzC,OAAEpE,EAAM,OAAEC,EAAM,KAAEC,EAAI,OAAEG,EAAM,QAAEE,EAAO,cAAE2C,EAAa,MAAE9C,EAAK,MAAEM,GACnE2C,EACF,OACEpB,EAAAA,EAAAA,MAACoC,EAAAA,EAAI,CAACC,GAAI,CAAEC,SAAU,IAAKC,EAAG,QAASrC,SAAA,EACrCE,EAAAA,EAAAA,KAACoC,EAAAA,EAAU,CACTxE,QACEoC,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,CAAChE,MAAOV,EAAOmC,UACrBE,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,CAAC,aAAW,SAASC,IAAK5E,EAAQ6E,IAAK5E,MAGlDS,MAAOA,EACPoE,UAAW5E,KAEbmC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAS,CACRC,UAAU,MACVC,QAAQ,OACRC,OAAQhC,EACRiC,MAAO5E,EACPqE,IAAKlE,IAELL,IACFgC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAW,CAAAjD,UACVE,EAAAA,EAAAA,KAACgD,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBpD,SAC/C9B,OAILgC,EAAAA,EAAAA,KAACmD,EAAAA,EAAW,CAACC,gBAAc,EAAAtD,UACzBE,EAAAA,EAAAA,KAACc,EAAU,CACTG,OAAQY,EACRwB,QAlCSC,KACfxB,GAAaD,EAAS,EAkChB,gBAAeA,EACf,aAAW,YAAW/B,UAEtBE,EAAAA,EAAAA,KAACuD,EAAAA,EAAc,SAGnBvD,EAAAA,EAAAA,KAACwD,EAAAA,EAAQ,CAACC,GAAI5B,EAAU6B,QAAQ,OAAOC,eAAa,EAAA7D,UAClDE,EAAAA,EAAAA,KAAC+C,EAAAA,EAAW,CAAAjD,UACVE,EAAAA,EAAAA,KAACgD,EAAAA,EAAU,CAACY,WAAS,EAAA9D,SAAE/B,UAGtB,C","sources":["books/repositories/boook-api-repository.tsx","books/view/books.tsx","shared/components/review-card.tsx"],"sourcesContent":["import Book from \"../entities/book\";\nimport axios, { AxiosResponse, AxiosError } from 'axios';\n\nexport class BookApiRepository{\n    baseUrl = \"https://openlibrary.org/api/books\"\n\n\n    getBook(isbn: string): Promise<Book> {\n        const queryParameter = new URLSearchParams({\n            bibkeys: `ISBN:${isbn}`,\n            format: \"json\",\n            jscmd: \"data\"\n        })\n        return new Promise<Book>((resolve, reject) => {\n            axios.get(`${this.baseUrl}?${queryParameter.toString()}`)\n            .then(async (response: AxiosResponse) => {\n                if(response.data){\n                    const bookData = response.data[`ISBN:${isbn}`]\n                    const authorName: string = bookData.authors[0].name\n                    const authorOlid: string = bookData.authors[0].url.match(/OL[^/]+/)\n                    const description: string = await this.getDescription(isbn)\n                    const book: Book = {\n                        author: authorName,\n                        avatar: `https://covers.openlibrary.org/a/olid/${authorOlid}-S.jpg`,\n                        date: bookData.publish_date,\n                        sumup: description,\n                        detail: bookData.subtitle,\n                        picture: bookData.cover.medium,\n                        title: bookData.title\n                    }\n                    resolve(book)\n                }\n                reject(new Error(\"Not data retrieved for this book\"));\n            })\n            .catch((error: AxiosError) => {\n                reject(error);\n            });\n        })\n\n    }\n    async getDescription(isbn: string): Promise<string> {\n        const queryParameter = new URLSearchParams({\n            bibkeys: `ISBN:${isbn}`,\n            format: \"json\",\n            jscmd: \"details\"\n        })\n        const response = await axios.get(`${this.baseUrl}?${queryParameter.toString()}`);\n        console.log(response.data[`ISBN:${isbn}`].details)\n        const details = response.data[`ISBN:${isbn}`].details;\n        let description: string;\n        if (typeof details.description == \"string\") {\n            description = details.description\n        } else if (details.description?.value) {\n            description = details.description.value\n        } else {\n            description =  response.data[`ISBN:${isbn}`].info_url\n        }\n        return description\n\n    }\n\n}","import Grid from '@mui/material/Grid';\nimport React, { useEffect, useState } from 'react';\nimport ReviewCard from '../../shared/components/review-card';\nimport Book from '../entities/book';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { BookApiRepository } from '../repositories/boook-api-repository';\n\nexport default function Books(): JSX.Element {\n  const { t } = useTranslation('books');\n  const [books, setBooks] = useState<Book[]>([]);\n\n  useEffect(() => {\n    const isbnArray = t<string, string[]>('books', { returnObjects: true });\n    const BookGetter = new BookApiRepository;\n    Promise.all(isbnArray.map((isbn) => BookGetter.getBook(isbn)))\n      .then((bookDataArray) => {\n        setBooks(bookDataArray);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, [t]);\n\n\n  return (\n    <>\n      <Helmet>\n        <title>SylwekFr - Books</title>\n        <meta\n          name=\"description\"\n          content=\"Welcome to the book's part. This part contains books I recommend reading. If you read those books, I hope you will enjoy them as much as I did. Wishing you some lovely reading time.\"\n        />\n      </Helmet>\n      <Grid\n        container\n        justifyContent=\"space-around\"\n        alignContent=\"center\"\n        spacing={3}\n      >\n        {books.map((book) => (\n              <Grid key={book.title} item justifyItems=\"center\" sm={12} md={6} lg={3}>\n                <ReviewCard {...book} pictureHeight={500} />\n              </Grid>\n              )\n            )\n        }\n      </Grid>\n    </>\n  );\n}\n","import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Avatar from '@mui/material/Avatar';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport { styled } from '@mui/material/styles';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\nimport React, { FC } from 'react';\n\ntype ExpandMoreProps = {\n  expand: boolean;\n} & IconButtonProps;\n\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\nexport type ReviewCardProps = {\n  avatar?: string;\n  author: string;\n  date: number;\n  detail?: string;\n  picture: string;\n  pictureHeight: number;\n  sumup: string;\n  title: string;\n};\n\nconst ReviewCard: FC<ReviewCardProps> = (props: ReviewCardProps) => {\n  const [expanded, setExpanded] = React.useState(false);\n\n  const onExpand = () => {\n    setExpanded(!expanded);\n  };\n\n  const { author, avatar, date, detail, picture, pictureHeight, sumup, title } =\n    props;\n  return (\n    <Card sx={{ maxWidth: 345, m: 'auto' }}>\n      <CardHeader\n        avatar={\n          <Tooltip title={author}>\n            <Avatar aria-label=\"author\" alt={author} src={avatar} />\n          </Tooltip>\n        }\n        title={title}\n        subheader={date}\n      />\n      <CardMedia\n        component=\"img\"\n        loading=\"lazy\"\n        height={pictureHeight}\n        image={picture}\n        alt={title}\n      />\n      { detail && (\n      <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {detail}\n        </Typography>\n      </CardContent>\n      )}\n      <CardActions disableSpacing>\n        <ExpandMore\n          expand={expanded}\n          onClick={onExpand}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </ExpandMore>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>{sumup}</Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default ReviewCard;\n"],"names":["BookApiRepository","constructor","baseUrl","getBook","isbn","queryParameter","URLSearchParams","bibkeys","format","jscmd","Promise","resolve","reject","axios","get","this","toString","then","async","response","data","bookData","authorName","authors","name","authorOlid","url","match","description","getDescription","book","author","avatar","date","publish_date","sumup","detail","subtitle","picture","cover","medium","title","Error","catch","error","_details$description","console","log","details","value","info_url","Books","t","useTranslation","books","setBooks","useState","useEffect","isbnArray","returnObjects","BookGetter","all","map","bookDataArray","_jsxs","_Fragment","children","Helmet","_jsx","content","Grid","container","justifyContent","alignContent","spacing","item","justifyItems","sm","md","lg","ReviewCard","pictureHeight","ExpandMore","styled","props","expand","other","IconButton","_ref","theme","transform","marginLeft","transition","transitions","create","duration","shortest","expanded","setExpanded","React","Card","sx","maxWidth","m","CardHeader","Tooltip","Avatar","alt","src","subheader","CardMedia","component","loading","height","image","CardContent","Typography","variant","color","CardActions","disableSpacing","onClick","onExpand","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","paragraph"],"sourceRoot":""}